{"mappings":"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","sources":["src/js/index.js","src/js/grid.js"],"sourcesContent":["import { Grid } from \"./grid\";\r\n\r\nconst newGridBtn = document.querySelector(\"#generate-grid\");\r\nconst addWordBtn = document.querySelector(\"#add-word\");\r\nconst resetBtn = document.querySelector(\"#reset\");\r\nconst wordInput = document.querySelector(\"#word\");\r\nconst sizeInput = document.querySelector(\"#grid-size\");\r\nconst wordListElement = document.querySelector(\"#word-list\");\r\nconst lengthWarningLabel = document.querySelector(\"#word-length-warning\");\r\nconst charWarningLabel = document.querySelector(\"#character-warning\");\r\nconst sizeWarningLabel = document.querySelector(\"#size-warning\");\r\nconst gameWonSection = document.querySelector(\"#game-won\");\r\nconst omittedWordsSpan = document.querySelector(\"#omitted-warning\");\r\n\r\nwords = [];\r\nconst grid = new Grid();\r\n\r\nresetBtn.addEventListener(\"click\", (event) => {\r\n  words = [];\r\n  newGridBtn.disabled = true;\r\n  sizeInput.value = 10;\r\n  grid.size = sizeInput.value;\r\n  wordListElement.innerHTML = \"\";\r\n  wordInput.value = \"\";\r\n  gameWonSection.classList.replace(\"game-won\", \"hidden\");\r\n  if (grid.gridArea.lastChild) {\r\n    grid.gridArea.removeChild(grid.gridArea.lastChild);\r\n  }\r\n});\r\n\r\naddWordBtn.addEventListener(\"click\", () => {\r\n  const newWord = wordInput.value.toUpperCase();\r\n  //Do nothing if empty input given. This scenario shouldn't be possible as we disable the button on empty field.\r\n  if (!wordInput.value) return;\r\n\r\n  //Only add the word if it doesn't already exist in the list.\r\n  if (words.indexOf(newWord) === -1) {\r\n    words.push(newWord);\r\n    const li = document.createElement(\"li\");\r\n    li.innerHTML = newWord;\r\n    li.dataset.word = newWord;\r\n    wordListElement.appendChild(li);\r\n  }\r\n\r\n  if (words.length & validSize(sizeInput.value)) {\r\n    newGridBtn.disabled = false;\r\n  }\r\n\r\n  wordInput.value = \"\";\r\n  addWordBtn.disabled = true;\r\n});\r\n\r\n// Validate word input is made of letters a-z (case insensitive) and not too long.\r\n// Shows warning labels when needed.\r\nwordInput.addEventListener(\"input\", (event) => {\r\n  if (!event.target.value) {\r\n    addWordBtn.disabled = true;\r\n    document\r\n      .querySelectorAll(\".active-warning\")\r\n      .forEach((element) => element.classList.replace(\"active-warning\", \"hidden-warning\"));\r\n    return;\r\n  }\r\n\r\n  const validLetters = /^[a-zA-Z]+$/.test(event.target.value);\r\n  const tooLong = event.target.value.length > grid.size;\r\n\r\n  if (tooLong) {\r\n    lengthWarningLabel.classList.replace(\"hidden-warning\", \"active-warning\");\r\n  } else {\r\n    lengthWarningLabel.classList.replace(\"active-warning\", \"hidden-warning\");\r\n  }\r\n\r\n  if (!validLetters) {\r\n    charWarningLabel.classList.replace(\"hidden-warning\", \"active-warning\");\r\n  } else {\r\n    charWarningLabel.classList.replace(\"active-warning\", \"hidden-warning\");\r\n  }\r\n\r\n  tooLong || !validLetters ? (addWordBtn.disabled = true) : (addWordBtn.disabled = false);\r\n});\r\n\r\nsizeInput.addEventListener(\"input\", (event) => {\r\n  if (validSize(event.target.value)) {\r\n    sizeWarningLabel.classList.replace(\"active-warning\", \"hidden-warning\");\r\n    words.length ? (newGridBtn.disabled = false) : (newGridBtn.disabled = true);\r\n  } else {\r\n    sizeWarningLabel.classList.replace(\"hidden-warning\", \"active-warning\");\r\n    newGridBtn.disabled = true;\r\n  }\r\n});\r\n\r\nnewGridBtn.addEventListener(\"click\", async () => {\r\n  if (!sizeInput.value) return; //Don't do anything if no size was entered. This scenario shouldn't be possible as we disable the button on empty field.\r\n\r\n  grid.init(words, parseInt(sizeInput.value));\r\n  let result = await fetchGrid(grid);\r\n  grid.renderGrid(result);\r\n});\r\n\r\nasync function fetchGrid(grid) {\r\n  const commaSeperatedWords = grid.words.join(\",\");\r\n  const response = await fetch(\r\n    `https://word-search-api.onrender.com/wordgrid?gridSize=${grid.size}&words=${commaSeperatedWords}`\r\n  );\r\n  const result = await response.json();\r\n  if (result[1]) {\r\n    const omittedWords = result[1].split(\",\");\r\n    words = words.filter((w) => omittedWords.indexOf(w) === -1);\r\n    omittedWords.forEach((omittedWord) => document.querySelector(`[data-word=\"${omittedWord}\"]`).remove());\r\n    omittedWordsSpan.innerHTML =\r\n      \"One or more words have been removed because they couldn't fit with this combination of words and grid size!\";\r\n    grid.words = words;\r\n  }\r\n  return result[0].split(\" \");\r\n}\r\n\r\n// Checks if input is numeric and larger than 2. Expects input to be string.\r\nfunction validSize(size) {\r\n  if (!size || !/^[0-9]*$/.test(size) || parseInt(size) < 2) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n","export class Grid {\r\n  size;\r\n  wordSelectMode;\r\n  selectedCells;\r\n  firstSelectedCell;\r\n  gridArea;\r\n  words;\r\n  foundWords;\r\n\r\n  constructor(size = 10) {\r\n    this.size = size;\r\n    this.wordSelectMode = false;\r\n    this.selectedCells = [];\r\n    this.firstSelectedCell;\r\n    this.gridArea = {};\r\n    this.words = [];\r\n    this.foundWords = [];\r\n    this.gridArea = document.getElementsByClassName(\"grid-area\")[0];\r\n  }\r\n\r\n  init(words, size = 10) {\r\n    this.size = size;\r\n    this.wordSelectMode = false;\r\n    this.selectedCells = [];\r\n    this.firstSelectedCell;\r\n    this.words = words;\r\n    this.foundWords = [];\r\n    document.querySelector(\"#game-won\").classList.replace(\"game-won\", \"hidden\");\r\n  }\r\n\r\n  getCellsInLine(firstCell, currentCell) {\r\n    let start = {\r\n      x: parseInt(firstCell.getAttribute(\"pos-x\")),\r\n      y: parseInt(firstCell.getAttribute(\"pos-y\")),\r\n    };\r\n    let end = {\r\n      x: parseInt(currentCell.getAttribute(\"pos-x\")),\r\n      y: parseInt(currentCell.getAttribute(\"pos-y\")),\r\n    };\r\n    let cellsInRange = [];\r\n    if (start.x > end.x || start.y > end.y) {\r\n      [end, start] = [start, end]; //Swap the cells with array destructuring when moving in the inverse direction\r\n    }\r\n\r\n    if (start.y === end.y) {\r\n      for (let i = start.x; i <= end.x; i++) {\r\n        cellsInRange.push(this.gridArea.querySelector(`td[pos-x=\"${i}\"][pos-y=\"${end.y}\"]`));\r\n      }\r\n    } else if (start.x === end.x) {\r\n      for (let i = start.y; i <= end.y; i++) {\r\n        cellsInRange.push(this.gridArea.querySelector(`td[pos-x=\"${end.x}\"][pos-y=\"${i}\"]`));\r\n      }\r\n    } else if (start.x - end.x === start.y - end.y) {\r\n      const distance = end.x - start.x; //distance is same regardless if we use x or y.\r\n      for (let i = 0; i <= distance; i++) {\r\n        cellsInRange.push(this.gridArea.querySelector(`td[pos-x=\"${start.x + i}\"][pos-y=\"${start.y + i}\"]`));\r\n      }\r\n    } else if (start.x - end.x === -1 * (start.y - end.y)) {\r\n      const distance = Math.abs(end.x - start.x); //Must take absolute value for distance as it can be negative.\r\n      for (let i = 0; i <= distance; i++) {\r\n        const x = start.x + i * (start.x - end.x > 0 ? -1 : 1);\r\n        const y = start.y + i * (start.y - end.y > 0 ? -1 : 1);\r\n        cellsInRange.push(this.gridArea.querySelector(`td[pos-x=\"${x}\"][pos-y=\"${y}\"]`));\r\n      }\r\n    }\r\n\r\n    return cellsInRange;\r\n  }\r\n\r\n  renderGrid(gridContents) {\r\n    if (this.gridArea.lastChild) {\r\n      this.gridArea.removeChild(this.gridArea.lastChild);\r\n    }\r\n    const tbl = document.createElement(\"table\");\r\n    const tblBody = document.createElement(\"tbody\");\r\n\r\n    for (let i = 0; i < this.size; i++) {\r\n      const row = document.createElement(\"tr\");\r\n      for (let j = 0; j < this.size; j++) {\r\n        const letter = gridContents[i * this.size + j];\r\n        const cell = document.createElement(\"td\");\r\n        cell.setAttribute(\"pos-x\", j);\r\n        cell.setAttribute(\"pos-y\", i);\r\n        cell.setAttribute(\"letter\", letter);\r\n        const cellText = document.createTextNode(letter);\r\n        cell.appendChild(cellText);\r\n        row.appendChild(cell);\r\n      }\r\n      tblBody.appendChild(row);\r\n    }\r\n\r\n    tbl.appendChild(tblBody);\r\n    this.gridArea.appendChild(tbl);\r\n\r\n    this.gridArea.addEventListener(\"mousedown\", (event) => {\r\n      //Avoid reacting to any other element than the cells in the table.\r\n      if (event.target.tagName != \"TD\") return;\r\n\r\n      this.wordSelectMode = true;\r\n      this.firstSelectedCell = event.target;\r\n    });\r\n\r\n    this.gridArea.addEventListener(\"mousemove\", (event) => {\r\n      //Avoid reacting to any other element than the cells in the table.\r\n      if (event.target.tagName != \"TD\") return;\r\n\r\n      //TODO Throttle?\r\n      if (this.wordSelectMode) {\r\n        const lastSelectedCell = this.selectedCells.at(-1);\r\n        //If event triggered while still on the same cell, do nothing.\r\n        if (\r\n          lastSelectedCell &&\r\n          lastSelectedCell.getAttribute(\"pos-x\") === event.target.getAttribute(\"pos-x\") &&\r\n          lastSelectedCell.getAttribute(\"pos-y\") === event.target.getAttribute(\"pos-y\")\r\n        ) {\r\n          return;\r\n        }\r\n        this.selectedCells.forEach((cell) => cell.classList.remove(\"selected\"));\r\n        this.selectedCells = this.getCellsInLine(this.firstSelectedCell, event.target);\r\n        this.selectedCells.forEach((cell) => {\r\n          if (!cell.classList.contains(\"found\")) {\r\n            cell.classList.add(\"selected\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.gridArea.addEventListener(\"mouseup\", (event) => {\r\n      //Avoid reacting to any other element than the cells in the table.\r\n      if (event.target.tagName != \"TD\") return;\r\n\r\n      this.wordSelectMode = false;\r\n      const selectedWord = this.selectedCells.reduce((word, cell) => {\r\n        return (word += cell.getAttribute(\"letter\"));\r\n      }, \"\");\r\n      const selectedWordReversed = selectedWord.split(\"\").reverse().join(\"\");\r\n\r\n      if (this.words.indexOf(selectedWord) !== -1) {\r\n        //Only add the found word once (in case i by random chance generate one of the search words more than once)\r\n        if (this.foundWords.indexOf(selectedWord) === -1) {\r\n          this.foundWords.push(selectedWord);\r\n        }\r\n        this.restyleCells(this.selectedCells, \"selected\", \"found\");\r\n      } else if (this.words.indexOf(selectedWordReversed) !== -1) {\r\n        if (this.foundWords.indexOf(selectedWordReversed) === -1) {\r\n          this.foundWords.push(selectedWordReversed);\r\n        }\r\n        this.restyleCells(this.selectedCells, \"selected\", \"found\");\r\n      } else {\r\n        this.selectedCells.forEach((cell) => cell.classList.remove(\"selected\"));\r\n      }\r\n\r\n      if (this.foundWords.length === this.words.length) {\r\n        document.querySelector(\"#game-won\").classList.replace(\"hidden\", \"game-won\");\r\n      }\r\n      this.selectedCells = [];\r\n    });\r\n  }\r\n\r\n  restyleCells(cells, oldStyle, newStyle) {\r\n    cells.forEach((cell) => {\r\n      if (oldStyle && newStyle) {\r\n        cell.classList.replace(oldStyle, newStyle);\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"names":["$8f6a480bb40b134f$var$newGridBtn","document","querySelector","$8f6a480bb40b134f$var$addWordBtn","$8f6a480bb40b134f$var$resetBtn","$8f6a480bb40b134f$var$wordInput","$8f6a480bb40b134f$var$sizeInput","$8f6a480bb40b134f$var$wordListElement","$8f6a480bb40b134f$var$lengthWarningLabel","$8f6a480bb40b134f$var$charWarningLabel","$8f6a480bb40b134f$var$sizeWarningLabel","$8f6a480bb40b134f$var$gameWonSection","$8f6a480bb40b134f$var$omittedWordsSpan","words","$8f6a480bb40b134f$var$grid","size","wordSelectMode","selectedCells","firstSelectedCell","gridArea","foundWords","constructor","this","getElementsByClassName","init","classList","replace","getCellsInLine","firstCell","currentCell","start","x","parseInt","getAttribute","y","end","cellsInRange","i","push","distance","Math","abs","renderGrid","gridContents","lastChild","removeChild","tbl","createElement","tblBody","row","j","letter","cell","setAttribute","cellText","createTextNode","appendChild","addEventListener","event","target","tagName","lastSelectedCell","at","forEach","remove","contains","add","selectedWord","reduce","word","selectedWordReversed","split","reverse","join","indexOf","restyleCells","length","cells","oldStyle","newStyle","$8f6a480bb40b134f$var$validSize","test","disabled","value","innerHTML","newWord","toUpperCase","li","dataset","querySelectorAll","element","validLetters","tooLong","async","result","grid","commaSeperatedWords","response","fetch","json","omittedWords","filter","w","omittedWord","$8f6a480bb40b134f$var$fetchGrid"],"version":3,"file":"index.acc4af5e.js.map"}